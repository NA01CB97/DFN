public static int LEFT(int i) //O(1)
{
return 2 * i + 1; //O(1)
}
public static int RIGHT(int i) //O(1)
{
return 2 * i + 2; //O(1)
}
public static void MaxHeapify(byte[] window, int windowLength, int i)
{
int leftChild = LEFT(i); //O(1)
int rightChild = RIGHT(i); //O(1)
int Largest = i; //O(1)
if (leftChild < windowLength && window[leftChild] > window[i]) //O(1)
Largest = leftChild; //O(1)
if (rightChild < windowLength && window[rightChild] > window[Largest]) //O(1)
Largest = rightChild; //O(1)

if (Largest != i) //O(1)
{
byte t = window[i]; //O(1)
window[i] = window[Largest]; //O(1)
window[Largest] = t; //O(1)
MaxHeapify(window, windowLength, Largest); //O(
}

}